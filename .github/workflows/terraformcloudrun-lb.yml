name: 'Terraform CI'

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: cloud-run-terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
           cloud-run-terraform:
             - 'cloud-run-terraform/**'
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      if: steps.filter.outputs.cloud-run-terraform == 'true'
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      #working-directory: ${{ env.ROOT_PATH }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      if: steps.filter.outputs.cloud-run-terraform == 'true'
      run: terraform fmt -check
      #working-directory: ${{ env.ROOT_PATH }}

    - name: Terraform Plan
      if: steps.filter.outputs.cloud-run-terraform == 'true'
      id: plan
      # if: github.event_name == 'pull_request' || github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform plan -out=tfplan -input=false -no-color
      continue-on-error: true
      env:
       GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      #working-directory: ${{ env.ROOT_PATH }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' && steps.filter.outputs.cloud-run-terraform == 'true'
      run: terraform apply "tfplan"
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      #working-directory: ${{ env.ROOT_PATH }}
